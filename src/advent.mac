ROUTINE advent
Start() public {
  Set $ListBuild(mon,day,year) = $ListFromString($ZDate($Horolog), "/")
  If mon'=12 Quit
  Set day = +day
  Set yy = $Extract(year, 3, 4)
  Set rtnName = "Advent"_yy_".Day"_day
  Write !,year," - ",day,!,"----------",!!
  If '##class(%Routine).%ExistsId(rtnName) {
    Do newDay(year, day)
  }
  Try {
    Set ts = $ZHorolog
    Do @("^"_rtnName)
    Write !,"complete: ",$ZHorolog-ts
  }
  Catch {
    Write $ZError
  }
  Quit
}
newDay(year,day) public {
  Set yy = $Extract(year, *-1, *)
  Set routinePath = "/opt/advent/src/Advent"_yy
  If ('##class(%File).Exists(routinePath)) && ('##class(%File).CreateDirectoryChain(routinePath)) {
    Write !,"Creating directory: ",routinePath," - ERROR"
    Return
  }
  Set inputPath = "/opt/advent/input/"_year
  If ('##class(%File).Exists(inputPath)) && ('##class(%File).CreateDirectoryChain(inputPath)) {
    Write !,"Creating directory: ",inputPath," - ERROR"
    Return
  }
  Set ht = ##class(%Net.HttpRequest).%New()
  Set ht.Server = "adventofcode.com"
  Set ht.Https = 1
  Set ht.SSLConfiguration = $$cert(ht.Server)
  Do ht.InsertCookie("session", $Get(^AdventSession), "/", ht.Server, $Horolog+10)
  Set sc = ht.Get("/"_year_"/day/"_day_"/input")
  If ht.HttpResponse.StatusCode=200 {
    Set fs = ##class(%Stream.FileCharacter).%New()
    Do fs.LinkToFile(inputPath_"/day"_day_".txt")
    Do fs.CopyFromAndSave(ht.HttpResponse.Data)
    Write !,"Input file: ",fs.Filename," - ",fs.Size
  }

  Set fs = ##class(%Stream.FileCharacter).%New()
  Set fileName = routinePath_"/Day"_day_".mac"
  If 'fs.LinkToFile(fileName) {
    Write !,"Error"
    Return
  }
  Do fs.WriteLine("ROUTINE Advent"_yy_".Day"_day)
  Do fs.WriteLine("#include helper")
  Do fs.WriteLine("Start() public {")
    Do fs.WriteLine("  #; $$$inputAll(input)")
    Do fs.WriteLine("  #; $$$inputFull(input)")
    Do fs.WriteLine("  #; $$$input(lines)")
    Do fs.WriteLine("  ")
    Do fs.WriteLine("  Set part1 = 0, part2 = 0")
    Do fs.WriteLine("  ")
    Do fs.WriteLine("  Write !,""Part1 = "",part1")
    Do fs.WriteLine("  $$$runtime")
    Do fs.WriteLine("  ")
    Do fs.WriteLine("  Write !,""Part2 = "",part2")
    Do fs.WriteLine("  $$$runtime")
    Do fs.WriteLine("}")
    If fs.%Save() {
      Do $System.OBJ.Load(fs.Filename, "ck")
    }
}
cert(host) public {
  New $Namespace
  Set $Namespace = "%SYS"
  If ##class(Security.SSLConfigs).Exists(host) Quit host
  Set cert = ##class(Security.SSLConfigs).%New()
  Set cert.Name = host
  Do cert.%Save()
  Quit host
}