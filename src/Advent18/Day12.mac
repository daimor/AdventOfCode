ROUTINE Advent18.Day12
#include helper
Start() public {
  $$$inputAll(input)
  if $LISTNEXT(input, ptr, init) {
    set init = $PIECE(init, ": ", 2)
    set input = $li(input, 3, *)
  }
  set ptr = 0
  while $$$nextLine(input, line) {
    set $LISTBUILD(from, to) = $LISTFROMSTRING(line, " => ")
    set data(from) = to
  }
  set line = init
  set list = ""
  for i=1:1:$LENGTH(init) {
    if $EXTRACT(init, i) = "#" {
      set list = list _ $LISTBUILD(i-1)
    }
  }
  do show(list)
  write !,"Part1 = ",$$gen(list, .data, 20)

  #; 50000000000 generations
  set first = $$gen(list, .data, 100)
  set next = $$gen(list, .data, 200)
  set sum = 50000000000 - 100 / 100 * (next - first) + first
  write !,"Part2 = ", sum
}
gen(list, &data, count) [data] {
  for i=1:1:count {
    set min = $$$min(list)
    set max = $$$max(list)
    set newList = ""
    for j=min-3:1:max+3 {
      set pattern = ""
      for k=-2:1:2 {
        set pattern = pattern _ $SELECT($LISTFIND(list, j+k): "#", 1: ".")
      }
      if $DATA(data(pattern), newState), newState="#" {
        set newList = newList _ $LISTBUILD(j)
      }
    }
    set list = newList
  }
  return $$$sum(list)
}
show(list) {
  set line = ""
  set min = $$$min(list)
  set max = $$$max(list)
  for i=min-2:1:max+2 {
    set line = line _ $SELECT($LISTFIND(list, i): "#", 1: ".")
  }
  return line
}
