ROUTINE Advent18.Day9
#include helper
Start() public {
  $$$input(lines)
  set input = lines(1)
  set input = $tr(input, "")
  set $lb(players, points) = $lfs($zstrip(input, "*AW"), ";")

  #; do run(9, 25)
  #; do run(10, 1618)
  #; do run(13, 7999)
  #; do run(17, 1104)
  #; do run(21, 6111)
  #; do run(30, 5807)

  do run(players, points)
  do run(players, points * 100)
}
insert(where, newMarble) {
  set next = ^CacheTemp.Marbles(where, "next")
  set ^CacheTemp.Marbles(newMarble, "prev") = where
  set ^CacheTemp.Marbles(newMarble, "next") = next
  set ^CacheTemp.Marbles(^CacheTemp.Marbles(where, "next"), "prev") = newMarble
  set ^CacheTemp.Marbles(where, "next") = newMarble
  return newMarble
}
remove(current) {
  set marble = current
  do {
    set marble = ^CacheTemp.Marbles(marble, "prev")
  } while $i(cnt)<7
  set ^CacheTemp.Marbles(^CacheTemp.Marbles(marble, "prev"), "next") = ^CacheTemp.Marbles(marble, "next")
  set ^CacheTemp.Marbles(^CacheTemp.Marbles(marble, "next"), "prev") = ^CacheTemp.Marbles(marble, "prev")
  quit marble
}
run(players, points) {
  kill ^CacheTemp.Marbles
  write !,players," players; last marble is worth "_points_" points; "

  set marble = 1, current = 0
  set ^CacheTemp.Marbles(0, "prev") = 0
  set ^CacheTemp.Marbles(0, "next") = 0
  while marble<=points {
    for i=1:1:players {
      if (marble#23)=0 {
        if $i(scores(i), marble)
        set removed = $$remove(.current)
        if $i(scores(i), removed)
        set current = ^CacheTemp.Marbles(removed, "next")
      } else {
        set current = $$insert(^CacheTemp.Marbles(current, "next"), marble)
      }
      set marble = marble + 1
      quit:marble>=points
    }
  }

  write "high score is ",$$$max(.scores)
}